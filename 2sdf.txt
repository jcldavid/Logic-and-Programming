/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package Robot;

/*
 *Berran, Konrad Henrick A.
 *120-22786
 *BSCS 1
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
public class RobotSuperClass extends Panel implements ActionListener{
    /**Declaration of class variables for the name and 
      *color of the robot or robots.
     */
    public int x = 0, y = 0, h = 0, a = 0, g = 0;
    public String robotName;
    public String colorName;
    public String altColorName;
    public Color robotColor1;
    public Color robotColor2;
    public Color temp1;
    public Color temp2;
   
    static Button bUp1 = new Button("Up");
    static Button bDown1 = new Button("Down");
    static Button bLeft1 = new Button("Left");
    static Button bRight1 = new Button("Right");
    static Button bLightsOn1 = new Button("On");
    static Button bHandsUp1 = new Button("Hands Up");
    static Button bHandsDown1 = new Button("Hands Down");
    static Button bUp2 = new Button("Up");
    static Button bDown2 = new Button("Down");
    static Button bLeft2 = new Button("Left");
    static Button bRight2 = new Button("Right");
    static Button bLightsOn2 = new Button("On");
    static Button bHandsUp2 = new Button("Hands Up");
    static Button bHandsDown2 = new Button("Hands Down");
    
    public RobotSuperClass(){
        setBackground(Color.WHITE);
    }
    
    /**The two following methods are accessor methods
      *for the name and color of the robot.
     */ 
    public String getrobotName(){
        return robotName;
    }
    public Color getrobotColor1(){
        return robotColor1;
    }
    public Color getrobotColor2(){
        return robotColor2;
    }
    
    /**The two following methods are mutator methods
      *for the name and color of the robot.
     */
    public void setrobotName(String a){
        this.robotName = a;
    }
    public void setrobotColor(String b){
        if(b.equalsIgnoreCase("blue")||b.equalsIgnoreCase("BLUE")){
            robotColor1 = Color.BLUE;
            robotColor2 = Color.DARK_GRAY;
            colorName = b;
            altColorName = "dark grey";
        }
        else if(b.equalsIgnoreCase("red")||b.equalsIgnoreCase("RED")){
            robotColor1 = Color.RED;
            robotColor2 = Color.ORANGE;
            colorName = b;
            altColorName = "orange";
        }
        else if(b.equalsIgnoreCase("grey")||b.equalsIgnoreCase("GREY")){
            robotColor1 = Color.GRAY;
            robotColor2 = Color.BLACK;
            colorName = b;
            altColorName = "black";
        }
        else if(b.equalsIgnoreCase("green")||b.equalsIgnoreCase("GREEN")){
            robotColor1 = Color.GREEN;
            robotColor2 = Color.LIGHT_GRAY;
            colorName = b;
            altColorName = "cyan";
        }
        else if(b.equalsIgnoreCase("yellow")||b.equalsIgnoreCase("YELLOW")){
            robotColor1 = Color.YELLOW;
            robotColor2 = Color.PINK;
            colorName = b;
            altColorName = "pink";
        }
    }
    
    public static void main(String kon[]){  
        //Temporary storage values for the name and color of the robots.
        String a , b;
        
        //Initialization of objects robot1 and robot2.
        RobotSuperClass robot1 = new RobotSuperClass();
        RobotSuperClass robot2 = new RobotSuperClass();
        
        //Calling of methods to assigning values to the objects instantiated.
        robot1.setrobotName(a = JOptionPane.showInputDialog("What is the name of the robot?"));
        robot1.setrobotColor(b = JOptionPane.showInputDialog("What is the color of the robot?"));
        robot2.setrobotName(a = JOptionPane.showInputDialog("What is the name of the robot?"));
        robot2.setrobotColor(b = JOptionPane.showInputDialog("What is the color of the robot?"));
        
        //Creating of frame and panels for the drawing.
        Frame main = new Frame("Display Robots");
        main.setLayout(new GridLayout(2,1));
        main.setSize(700,700);
        Panel p1 = new Panel(new GridLayout(1,2));
        p1.add(robot1);
        p1.add(robot2);
        
        //Adding the First set of buttons for the first robot
        Panel p2 = new Panel(new GridLayout(1,7));
        p2.add(bUp1);
        p2.add(bDown1);
        p2.add(bLeft1);
        p2.add(bRight1);
        p2.add(bLightsOn1);
        p2.add(bHandsUp1);
        p2.add(bHandsDown1);
        
        //Adding the Second set of buttons for the second robot
        Panel p3 = new Panel(new GridLayout(1,7));
        p3.add(bUp2);
        p3.add(bDown2);
        p3.add(bLeft2);
        p3.add(bRight2);
        p3.add(bLightsOn2);
        p3.add(bHandsUp2);
        p3.add(bHandsDown2);
        
        Panel p4 = new Panel(new GridLayout(2,1));
        p4.add(p2);
        p4.add(p3);
        main.add(p1);
        main.add(p4);   
        main.setVisible(true);
        
        //Activating the Action Listeners per button and what robot it will affect
        bUp1.addActionListener(robot1);
        bDown1.addActionListener(robot1);
        bLeft1.addActionListener(robot1);
        bRight1.addActionListener(robot1);
        bLightsOn1.addActionListener(robot1);
        bHandsUp1.addActionListener(robot1);
        bHandsDown1.addActionListener(robot1);
        bUp2.addActionListener(robot2);
        bDown2.addActionListener(robot2);
        bLeft2.addActionListener(robot2);
        bRight2.addActionListener(robot2);
        bLightsOn2.addActionListener(robot2);
        bHandsUp2.addActionListener(robot2);
        bHandsDown2.addActionListener(robot2);
        
    }
    
    @Override
    public void paint(Graphics g){
        Graphics2D g2d = (Graphics2D)g; 
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        //Draws Head of the robot
        g.setColor(Color.getColor(colorName, robotColor1));
        g.drawRect(100+x, 25+y, 75, 80);
        g.fillRect(90+x, 55+y, 10, 10);
        g.fillRect(175+x,55+y,10,10);
        g.fillRect(100+x,25+y,75,10);
        g.drawRect(100+x, 50+y, 25, 25);
        g.fillRect(135+x, 50+y, 5, 30);
        g.drawRect(150+x, 50+y, 25, 25);
        g.fillRect(110+x, 90+y, 55, 10);
        g.drawRect(105+x, 80+y, 65, 20);
        //eyes
        g.setColor(Color.getColor(altColorName, robotColor2));
        g.fillOval(100+x,50+y,25,25);
        g.fillOval(150+x,50+y,25,25);
        
        //Draws Body of the robot
        g.setColor(Color.getColor(colorName, robotColor1));
        g.drawRoundRect(100+x, 110+y, 75, 100, 30, 30);
        g.drawRect(105+x, 120+y, 30, 30);
        g.drawRect(140+x, 120+y, 30, 50);
        g.drawOval(150+x, 120+y, 10, 10);
        g.fillOval(150+x, 130+y, 10, 10);
        g.drawOval(150+x, 140+y, 10, 10);
        g.fillOval(150+x, 150+y, 10, 10);
        g.drawOval(150+x, 160+y, 10, 10);
        g.setColor(Color.getColor(altColorName, robotColor2));
        g.fillRect(110+x, 125+y, 20, 20); 
        g.fillOval(140+x, 120+y, 10, 10);
        g.drawOval(140+x, 130+y, 10, 10);
        g.fillOval(140+x, 140+y, 10, 10);
        g.drawOval(140+x, 150+y, 10, 10);
        g.fillOval(140+x, 160+y, 10, 10);
        g.fillRect(100+x, 175+y, 75, 10);
        g.fillOval(160+x, 120+y, 10, 10);
        g.drawOval(160+x, 130+y, 10, 10);
        g.fillOval(160+x, 140+y, 10, 10);
        g.drawOval(160+x, 150+y, 10, 10);
        g.fillOval(160+x, 160+y, 10, 10);
        
        //Draws Arms of the robot
        g.setColor(Color.getColor(colorName, robotColor1));
        g.drawRect(85+x, 120+y+a, 10, 50);
        g.drawRect(180+x, 120+y+a, 10, 50);
        g.setColor(Color.getColor(altColorName, robotColor2));
        g.fillRect(80+x, 170+y+h, 20, 20);
        g.fillRect(175+x, 170+y+h, 20, 20);
        
        //Draws Booster of the robot
        g.setColor(Color.getColor(colorName, robotColor1));
        g.drawArc(85+x, 210+y, 105, 35, 0, 180);
        g.drawLine(85+x, 228+y, 190+x, 228+y);
        g.fillOval(106+x, 230+y, 20, 20);
        g.fillOval(148+x, 230+y, 20, 20);
        g.setColor(Color.getColor(altColorName, robotColor2));
        g.fillOval(85+x, 230+y, 20, 20);
        g.fillOval(127+x, 230+y, 20, 20);
        g.fillOval(169+x, 230+y, 20, 20);
        
        //Robot Name is displayed
        g.setColor(Color.BLACK);
        g.drawString(getrobotName(), 120+x,280+y);
    }
    
    public void keyPressed(KeyEvent e){
       int keycode = e.getKeyCode();
       if(keycode == e.VK_W){
           y-=5;
           repaint();
       }
       if(keycode == e.VK_A){
           x-=5;
           repaint();
       }
       if(keycode == e.VK_S){
           y+=5;
           repaint();
       }
       if(keycode == e.VK_D){
           x+=5;
           repaint();
       }
    }
    public void keyReleased(KeyEvent e){
        
    }
    public void keyTyped(KeyEvent e){
        
    }
    
    public void actionPerformed(ActionEvent e) {
        if(e.getActionCommand().equals("On")){
            temp1 = robotColor1;
            temp2 = robotColor2;
            robotColor1 = temp2;
            robotColor2 = temp1;
            repaint();
        }
        if(e.getActionCommand().equals("Hands Up")){
            h = -70;
            a = -20;
            repaint();
        }
        if(e.getActionCommand().equals("Hands Down")){
            h = 0;
            a = 0;
            repaint();
        }
        if(e.getActionCommand().equals("Up")){
            y-=5;
            repaint();
        }
        if(e.getActionCommand().equals("Down")){
            y+=5;
            repaint();
        }
        if(e.getActionCommand().equals("Left")){
            x-=5;
            repaint();
        }
        if(e.getActionCommand().equals("Right")){
            x+=5;
            repaint(); 
        }
    }
}